package edu.psgv.sweng861;

import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;
import java.util.Arrays;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

/**
 * SpotifyArtistDataTest contains the unit tests of the
 * SpotifyArtistData class. These tests test various methods
 * of the class to make sure the correct data is obtained.
 * @author Matthew Bollinger
 */
class SpotifyArtistDataTest {

	// Can't test images due to unique id attached to every BufferedImage object

	// SpotifyRestRequester object that makes all API requests
	SpotifyRestRequester projectApi = new SpotifyRestRequester();
	SpotifyArtistData artistData;

	/**
	 * Initializes SpotifyArtistData object with "Penkin" acting as input
	 * @throws Exception
	 */
	@BeforeEach
	public void setUp() throws Exception {
		artistData = projectApi.searchArtist("Penkin");
	}

	/**
	 * Tests the getArtistNames() method to ensure the correct
	 * names are obtained through the initialization of the object.
	 */
	@Test
	public void testArtistNames() {
		ArrayList<String> artistNames = artistData.getArtistNames();
		ArrayList<String> expectedNames = new ArrayList<>(
				Arrays.asList("Kevin Penkin", "Kat Penkin", "Jenny Penkin", "Sergey Penkin", "Pekeño 77"));
		assertEquals(artistNames, expectedNames);
	}

	/**
	 * Tests the getArtistGenres() method to ensure the correct
	 * genres are obtained through the initialization of the object.
	 */
	@Test
	public void testArtistGenres() {
		ArrayList<ArrayList<String>> artistGenres = artistData.getArtistGenres();
		ArrayList<ArrayList<String>> expectedGenres = new ArrayList<ArrayList<String>>();
		expectedGenres.add(new ArrayList<String>(Arrays.asList("anime score", "otacore")));
		expectedGenres.add(new ArrayList<String>(Arrays.asList("rhythm game")));
		expectedGenres.add(new ArrayList<String>());
		expectedGenres.add(new ArrayList<String>(Arrays.asList("classic russian pop")));
		expectedGenres.add(new ArrayList<String>(Arrays.asList("rap uruguayo", "trap latino")));
		assertEquals(artistGenres, expectedGenres);
	}

	/**
	 * Tests the getArtistFollowers() method to ensure the correct
	 * follower counts are obtained through the initialization of the object.
	 */
	@Test
	public void testArtistFollowers() {
		ArrayList<Integer> artistFollowers = artistData.getArtistFollowers();
		ArrayList<Integer> expectedFollowers = new ArrayList<Integer>(Arrays.asList(35750, 505, 1153, 945, 186031));
		assertEquals(artistFollowers, expectedFollowers);
	}
	
	/**
	 * Tests the getArtistPopularities() method to ensure the correct
	 * popularity ratings are obtained through the initialization of the object.
	 */
	@Test
	public void testArtistPopularities() {
		ArrayList<String> artistPopularities = artistData.getArtistPopularities();
		ArrayList<String> expectedPopularities = new ArrayList<String>(
				Arrays.asList("Somewhat popular", "Not very popular", "Not very popular", "Not very popular", "Somewhat popular"));
		assertEquals(artistPopularities, expectedPopularities);
		
	}

}
