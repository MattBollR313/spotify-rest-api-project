package edu.psgv.sweng861;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JRadioButton;
import javax.swing.SwingConstants;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JTextArea;
import javax.swing.JLabel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;

public class SpotifyRestApiWindow {

	private JFrame spotifyFrame;
	private JTextField userInputText;
	private DefaultListModel<String> listModel;
	private JTextArea resultInfo;
	private JLabel resultPicture;
	private final ButtonGroup chooseTypeOfInput = new ButtonGroup();
	
	private SpotifyRestApiProject apiDataHandler = new SpotifyRestApiProject();
	private SpotifyArtistData artistsInfo;
	private SpotifyTrackData tracksInfo;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					SpotifyRestApiWindow window = new SpotifyRestApiWindow();
					window.spotifyFrame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public SpotifyRestApiWindow() {
		initialize();
	}
	
	class ButtonAction implements ActionListener {
		String inputType, inputText;

		@Override
		public void actionPerformed(ActionEvent e) {
			inputType = chooseTypeOfInput.getSelection().getActionCommand();
			inputText = userInputText.getText();
			if (inputText.equals("")) {
				return; // Fix to handle empty string input error
			}
			listModel.clear();
			if (inputType.equals("Artist")) {
				artistsInfo = apiDataHandler.searchArtist(inputText);
				for (String artistNames : artistsInfo.getArtistNames())
					listModel.addElement(artistNames);
			} else {
				tracksInfo = apiDataHandler.searchSong(inputText);
				for (String trackNames : tracksInfo.getTrackNames())
					listModel.addElement(trackNames);
			}
		}
	}
	
	class ListAction implements ListSelectionListener {
		

		@Override
		public void valueChanged(ListSelectionEvent e) {
			int index = e.getFirstIndex();
		}
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		spotifyFrame = new JFrame();
		spotifyFrame.setTitle("Spotify Retrieve Information");
		spotifyFrame.setBounds(100, 100, 700, 500);
		spotifyFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		spotifyFrame.getContentPane().setLayout(null);
		
		userInputText = new JTextField();	// Must handle empty text with pop up and loop
		userInputText.setToolTipText("Enter in an artist or song");
		userInputText.setBounds(42, 24, 280, 39);
		spotifyFrame.getContentPane().add(userInputText);
		userInputText.setColumns(10);
		
		JButton submitInputButton = new JButton("Get Results");
		submitInputButton.addActionListener(new ButtonAction());
		submitInputButton.setBounds(210, 71, 112, 30);
		spotifyFrame.getContentPane().add(submitInputButton);
		
		JRadioButton chooseArtist = new JRadioButton("Artist");
		chooseArtist.setSelected(true);
		chooseArtist.setActionCommand("Artist");
		chooseTypeOfInput.add(chooseArtist);
		chooseArtist.setHorizontalAlignment(SwingConstants.CENTER);
		chooseArtist.setBounds(42, 75, 80, 23);
		spotifyFrame.getContentPane().add(chooseArtist);
		
		JRadioButton chooseTrack = new JRadioButton("Song");
		chooseTrack.setActionCommand("Song");
		chooseTypeOfInput.add(chooseTrack);
		chooseTrack.setHorizontalAlignment(SwingConstants.CENTER);
		chooseTrack.setBounds(124, 75, 80, 23);
		spotifyFrame.getContentPane().add(chooseTrack);
		
		listModel = new DefaultListModel<>();
		JList<String> listOfNames = new JList<>(listModel);
		listOfNames.addListSelectionListener(new ListAction());
		listOfNames.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		listOfNames.setBounds(42, 118, 189, 332);
		spotifyFrame.getContentPane().add(listOfNames);
		
		resultInfo = new JTextArea();
		resultInfo.setBounds(241, 198, 433, 252);
		spotifyFrame.getContentPane().add(resultInfo);
		
		resultPicture = new JLabel("");
		resultPicture.setBounds(338, 24, 336, 160);
		spotifyFrame.getContentPane().add(resultPicture);
	}
}
